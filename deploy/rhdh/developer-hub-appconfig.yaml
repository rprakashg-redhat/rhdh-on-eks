apiVersion: v1
kind: ConfigMap
metadata:
  name: "developer-hub-appconfig"
  namespace: tools
data:
  developer-hub-appconfig.yaml: |
    organization:
      name: Demo org
    aws:
      mainAccount:
        accessKeyId: ${AWS_ACCESS_KEY_ID}
        secretAccessKey: ${AWS_SECRET_ACCESS_KEY}
    kubernetes:
      serviceLocatorMethod:
        type: 'multiTenant'
      clusterLocatorMethods:
        - type: 'config'
          clusters:
          - url: ${EKS_CLUSTER_URL}
            name: eks
            title: 'eks cluster'
            authProvider: 'aws'
            caData: ${EKS_CA_DATA}
            authMetadata:
              kubernetes.io/aws-assume-role: ${EKS_ROLE_ARN_TO_ASSUME}
              #kubernetes.io/aws-external-id: ${EXTERNAL_ID} commenting this out since cluster is in the same account where backstage is running
              kubernetes.io/x-k8s-aws-id: ${EKS_CLUSTER_NAME}
    techdocs:
      generator:
        runIn: local
        mkdocs:
          defaultPlugins: ['techdocs-core']
      builder: 'external'
      publisher:
        type: 'awsS3'
        awsS3:
          bucketName: ${TECHDOCS_AWSS3_BUCKET_NAME}
          endPoint: ${TECHDOCS_AWSS3_BUCKET_URL}
          bucketRootPath: '/'
          accountId: ${TECHDOCS_AWSS3_ACCOUNT_ID}
          credentials:
            accessKeyId: ${AWS_ACCESS_KEY_ID}
            secretAccessKey: ${AWS_SECRET_ACCESS_KEY}
          region: ${AWS_REGION}
          sse: 'aws:kms'
    signInPage: github
    auth:
      environment: demo
      providers:
        github:
          demo:
            clientId: ${GITHUB_APP_CLIENT_ID}
            clientSecret: ${GITHUB_APP_CLIENT_SECRET}
    integrations:
      github:
      - host: github.com
        token: ${GITHUB_TOKEN}
        #apps:
        #- appId: ${GITHUB_APP_APP_ID}
        #  clientId: ${GITHUB_APP_CLIENT_ID}
        #  clientSecret: ${GITHUB_APP_CLIENT_SECRET}
        #  webhookUrl: ${GITHUB_APP_WEBHOOK_URL}
        #  webhookSecret: ${GITHUB_APP_WEBHOOK_SECRET}
        #  privateKey: |
        #    ${GITHUB_APP_PRIVATE_KEY}
    catalog:
      import:
        entityFileName: catalog-info.yaml
      rules:
        - allow: [Component, System, API, Resource, Location, Domain, Template]
      locations:
        - type: url
          target: https://github.com/rprakashg-redhat/rhdh-templates/blob/main/all-templates.yaml
        - type: url
          target: https://github.com/rprakashg-redhat/apis/blob/main/all-apis.yaml
        #- type: github-org
        #  target: https://github.com/${GITHUB_ORG}
        #  rules:
        #    - allow: [User, Group]
      providers:
        github:
          organization: ${GITHUB_ORG}
          catalogPath: '/catalog-info.yaml' # string
          filters:
            branch: 'main' # string
            repository: '.*' # Regex
          schedule:
            frequency:
              minutes: 30
            initialDelay:
              seconds: 15
            timeout:
              minutes: 3
    permission:
      enabled: false